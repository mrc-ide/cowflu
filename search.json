[{"path":"https://mrc-ide.github.io/cowflu/articles/cowflu.html","id":"running-the-model","dir":"Articles","previous_headings":"","what":"Running the model","title":"Toy Example","text":"Start setting seed, number particles wish run Initialise dust system: Run model desired number time-steps, instance, 0 75: One model variables exported end s object part SEIR dynamics. want chop now. Now re-arrange output array: Dim 1 herd, note also export cumulative region totals end. Dim 2 number epi compartments: S, E, , R, outbreak recording. Dim 3 number particles run. Dim 4 time. Note, large models, may want (able) export every herd’s dynamic profile. Instead, can ask dust2 just return region totals like : Create , list region total indices. run model, allocate output array check outputs :","code":"set.seed(1) n_particles <- 1 sys <- dust2::dust_system_create(cowflu:::cows(), pars, n_particles = n_particles, dt = 0.25, seed = 42) dust2::dust_system_set_state_initial(sys) s <- dust2::dust_system_simulate(sys, 0:75) end_of_core_states <- (pars$n_herds + pars$n_regions)*5 s <- s[1:end_of_core_states,] s1 <- array(s, c(pars$n_herds + pars$n_regions, 5, n_particles, 76)) i <- seq.int(pars$n_herds + 1, length.out = pars$n_regions) i <- c(outer(i, (pars$n_herds + pars$n_regions) * (0:3), \"+\")) sys <- dust2::dust_system_create(cowflu:::cows(), pars, n_particles = n_particles, dt = 0.25, seed = 42) dust2::dust_system_set_state_initial(sys) s <- dust2::dust_system_simulate(sys, 0:75, i) s2 <- array(s, c(pars$n_regions, 4, n_particles, 76)) testthat::expect_equal(s1[22:24, 1:4, , , drop = FALSE], s2)"},{"path":"https://mrc-ide.github.io/cowflu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Rawson. Author, maintainer. Rich FitzJohn. Author. Imperial College Science, Technology Medicine. Copyright holder.","code":""},{"path":"https://mrc-ide.github.io/cowflu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rawson T, FitzJohn R (2024). cowflu: Cows Flu. R package version 0.2.0https://mrc-ide.github.io/cowflu https://github.com/mrc-ide/cowflu, https://mrc-ide.github.io/cowflu https://github.com/mrc-ide/cowflu.","code":"@Manual{,   title = {cowflu: Cows With Flu},   author = {Thomas Rawson and Rich FitzJohn},   year = {2024},   note = {R package version 0.2.0https://mrc-ide.github.io/cowflu https://github.com/mrc-ide/cowflu},   url = {https://mrc-ide.github.io/cowflu https://github.com/mrc-ide/cowflu}, }"},{"path":[]},{"path":"https://mrc-ide.github.io/cowflu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cows With Flu","text":"install cowflu:","code":"remotes::install_github(\"mrc-ide/cowflu\", upgrade = FALSE)"},{"path":"https://mrc-ide.github.io/cowflu/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Cows With Flu","text":"need cpp11, decor, brio installed . Make changes model [inst/dust/cows.cpp] Run dust2::dust_package(\".\") Run tests devtools::test() (exist!) set command line, can make src/cows.cpp instead second step.","code":""},{"path":"https://mrc-ide.github.io/cowflu/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Cows With Flu","text":"MIT © Imperial College Science, Technology Medicine","code":""}]
